{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","startingTodos","App","useState","isClicked","setIsClicked","titleName","setTitleName","userName","setUserName","setTodos","action","method","type","placeholder","value","onChange","event","inputValue","reg","RegExp","letter","length","undefined","search","handleChange","target","trim","select","selectedValue","disabled","onClick","preventDefault","newTodo","sort","a","b","addTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.990b6f9b.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    title,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        classNames(\n          'TodoInfo',\n          { 'TodoInfo--completed': completed },\n        )\n      }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface TodosProps {\n  todos: Todo[]\n}\n\nexport const TodoList: React.FC<TodosProps> = ({ todos }) => (\n  <>\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  </>\n);\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const startingTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [isClicked, setIsClicked] = useState(false);\n  const [titleName, setTitleName] = useState('');\n  const [userName, setUserName] = useState('0');\n  const [todos, setTodos] = useState(startingTodos);\n\n  const handleChange = (inputValue: string) => {\n    const reg = new RegExp('[a-zA-Zа-яА-Я\\\\d ]+');\n    const letter = inputValue[inputValue.length - 1];\n\n    if (letter !== undefined) {\n      if (letter.search(reg) !== -1) {\n        setTitleName(inputValue);\n      }\n    } else {\n      setTitleName('');\n    }\n  };\n\n  const chooseSelect = (selectedValue: string) => {\n    setUserName(selectedValue);\n  };\n\n  const clearingForm = () => {\n    setUserName('0');\n    setTitleName('');\n    setIsClicked(false);\n  };\n\n  const addTodo = () => {\n    const arrayId = (\n      [...todos]\n        .sort((a, b) => (b.id - a.id))[0].id + 1\n    );\n\n    const newTodo = {\n      id: arrayId,\n      title: titleName,\n      completed: false,\n      userId: +userName,\n      user: getUser(+userName),\n    };\n\n    setTodos([...todos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\">\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={titleName}\n              onChange={(event) => {\n                handleChange(event.target.value);\n              }}\n            />\n          </label>\n\n          {isClicked && (\n            !titleName.trim().length && (\n              <span className=\"error\">Please enter a title</span>\n            )\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={userName}\n              onChange={(select) => {\n                chooseSelect(select.target.value);\n              }}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map((user) => {\n                const {\n                  id,\n                  name,\n                } = user;\n\n                return (\n                  <option\n                    value={id}\n                    key={id}\n                  >\n                    {name}\n                  </option>\n                );\n              })}\n            </select>\n          </label>\n\n          {isClicked && (\n            userName === '0') && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={(event) => {\n            event.preventDefault();\n            setIsClicked(true);\n            if (userName !== '0' && titleName.trim().length > 0) {\n              addTodo();\n              clearingForm();\n            }\n          }}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}